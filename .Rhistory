geom_sf(data=boundaries$`1`, colour="black", linewidth=0.1) +
# DASHED: Undetermined boundary lines (e.g. Sudan and South Sudan, State of Palestine)
geom_sf(data=boundaries$`3`, colour="black", linetype="dashed", linewidth=0.1) +
# DOTTED: Jammu and Kashmir line of control
geom_sf(data=boundaries$`4`, colour="black", linetype="dotted", linewidth=0.1) +
# Plot the lakes
geom_sf(data=maps[["WBYA"]], fill="lightblue1", colour=NA, linewidth=0.1) +
# Change the axis
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
# Create the plotting
scale_fill_viridis_c("Parity age", option="B", direction=-1, na.value = "white", breaks=seq(0, 100, by=10)) +
# Add the labs
#labs(caption=un_caption) +
# Create the background
theme(
panel.background = element_rect(fill='lightblue1'),
axis.text = element_blank(),
legend.position="bottom",
axis.ticks = element_blank()
) +
guides(fill = guide_legend(nrow=1))
# Merge the map with
ggplot() +
# Plot the country bodies
geom_sf(data=maps[[1]], fill = "lightblue1", colour=NA) +
geom_sf(data=map_wpp_srb, aes(fill=srb), colour=NA) +
# Plot the country boundaries
# three styles of boundaries should be mapped: standard solid line, dashed line for undetermined boundaries, dotted for selected disputed boundaries
# to do that, we create a separate dataframe with each containing boundaries of the same type
# SOLID: 0 is coastlines; 1 is international boundaries;
geom_sf(data=boundaries$`0`, colour="black", linewidth=0.1) +
geom_sf(data=boundaries$`1`, colour="black", linewidth=0.1) +
# DASHED: Undetermined boundary lines (e.g. Sudan and South Sudan, State of Palestine)
geom_sf(data=boundaries$`3`, colour="black", linetype="dashed", linewidth=0.1) +
# DOTTED: Jammu and Kashmir line of control
geom_sf(data=boundaries$`4`, colour="black", linetype="dotted", linewidth=0.1) +
# Plot the lakes
geom_sf(data=maps[["WBYA"]], fill="lightblue1", colour=NA, linewidth=0.1) +
# Change the axis
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
# Create the plotting
scale_fill_viridis_c("Parity age", option="B", direction=-1, na.value = "white", breaks=seq(0, 100, by=10)) +
# Add the labs
#labs(caption=un_caption) +
# Create the background
theme(
panel.background = element_rect(fill='lightblue1'),
axis.text = element_blank(),
legend.position="bottom",
axis.ticks = element_blank()
) +
guides(fill = guide_legend(nrow=1, position="bottom"))
hist(dt_wpp_srb$srb)
# Merge the map with
ggplot() +
# Plot the country bodies
geom_sf(data=maps[[1]], fill = "lightblue1", colour=NA) +
geom_sf(data=map_wpp_srb, aes(fill=srb), colour=NA) +
# Plot the country boundaries
# three styles of boundaries should be mapped: standard solid line, dashed line for undetermined boundaries, dotted for selected disputed boundaries
# to do that, we create a separate dataframe with each containing boundaries of the same type
# SOLID: 0 is coastlines; 1 is international boundaries;
geom_sf(data=boundaries$`0`, colour="black", linewidth=0.1) +
geom_sf(data=boundaries$`1`, colour="black", linewidth=0.1) +
# DASHED: Undetermined boundary lines (e.g. Sudan and South Sudan, State of Palestine)
geom_sf(data=boundaries$`3`, colour="black", linetype="dashed", linewidth=0.1) +
# DOTTED: Jammu and Kashmir line of control
geom_sf(data=boundaries$`4`, colour="black", linetype="dotted", linewidth=0.1) +
# Plot the lakes
geom_sf(data=maps[["WBYA"]], fill="lightblue1", colour=NA, linewidth=0.1) +
# Change the axis
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
# Create the plotting
scale_fill_gradient2("Sex ratio at birth", midpoint=100, low="blue", high="darkred", mid="grey") +
# Add the labs
#labs(caption=un_caption) +
# Create the background
theme(
panel.background = element_rect(fill='lightblue1'),
axis.text = element_blank(),
legend.position="bottom",
axis.ticks = element_blank()
) +
guides(fill = guide_legend(nrow=1, position="bottom"))
# Merge the map with
ggplot() +
# Plot the country bodies
geom_sf(data=maps[[1]], fill = "black", colour=NA) +
geom_sf(data=map_wpp_srb, aes(fill=srb), colour=NA) +
# Plot the country boundaries
# three styles of boundaries should be mapped: standard solid line, dashed line for undetermined boundaries, dotted for selected disputed boundaries
# to do that, we create a separate dataframe with each containing boundaries of the same type
# SOLID: 0 is coastlines; 1 is international boundaries;
geom_sf(data=boundaries$`0`, colour="black", linewidth=0.1) +
geom_sf(data=boundaries$`1`, colour="black", linewidth=0.1) +
# DASHED: Undetermined boundary lines (e.g. Sudan and South Sudan, State of Palestine)
geom_sf(data=boundaries$`3`, colour="black", linetype="dashed", linewidth=0.1) +
# DOTTED: Jammu and Kashmir line of control
geom_sf(data=boundaries$`4`, colour="black", linetype="dotted", linewidth=0.1) +
# Plot the lakes
geom_sf(data=maps[["WBYA"]], fill="lightblue1", colour=NA, linewidth=0.1) +
# Change the axis
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
# Create the plotting
scale_fill_gradient2("Sex ratio at birth", midpoint=100, low="blue", high="darkred", mid="grey") +
# Add the labs
#labs(caption=un_caption) +
# Create the background
theme(
panel.background = element_rect(fill='lightblue1'),
axis.text = element_blank(),
legend.position="bottom",
axis.ticks = element_blank()
) +
guides(fill = guide_legend(nrow=1, position="bottom"))
# Merge the map with
ggplot() +
# Plot the country bodies
geom_sf(data=maps[[1]], fill = "black", colour=NA) +
geom_sf(data=map_wpp_srb, aes(fill=srb), colour=NA) +
# Plot the country boundaries
# three styles of boundaries should be mapped: standard solid line, dashed line for undetermined boundaries, dotted for selected disputed boundaries
# to do that, we create a separate dataframe with each containing boundaries of the same type
# SOLID: 0 is coastlines; 1 is international boundaries;
geom_sf(data=boundaries$`0`, colour="black", linewidth=0.1) +
geom_sf(data=boundaries$`1`, colour="black", linewidth=0.1) +
# DASHED: Undetermined boundary lines (e.g. Sudan and South Sudan, State of Palestine)
geom_sf(data=boundaries$`3`, colour="black", linetype="dashed", linewidth=0.1) +
# DOTTED: Jammu and Kashmir line of control
geom_sf(data=boundaries$`4`, colour="black", linetype="dotted", linewidth=0.1) +
# Plot the lakes
geom_sf(data=maps[["WBYA"]], fill="lightblue1", colour=NA, linewidth=0.1) +
# Change the axis
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
# Create the plotting
scale_fill_viridis_c("Sex ratio at birth") +
# Add the labs
#labs(caption=un_caption) +
# Create the background
theme(
panel.background = element_rect(fill='lightblue1'),
axis.text = element_blank(),
legend.position="bottom",
axis.ticks = element_blank()
) +
guides(fill = guide_legend(nrow=1, position="bottom"))
# Merge the map with
ggplot() +
# Plot the country bodies
geom_sf(data=maps[[1]], fill = "black", colour=NA) +
geom_sf(data=map_wpp_srb, aes(fill=srb), colour=NA) +
# Plot the country boundaries
# three styles of boundaries should be mapped: standard solid line, dashed line for undetermined boundaries, dotted for selected disputed boundaries
# to do that, we create a separate dataframe with each containing boundaries of the same type
# SOLID: 0 is coastlines; 1 is international boundaries;
geom_sf(data=boundaries$`0`, colour="black", linewidth=0.1) +
geom_sf(data=boundaries$`1`, colour="black", linewidth=0.1) +
# DASHED: Undetermined boundary lines (e.g. Sudan and South Sudan, State of Palestine)
geom_sf(data=boundaries$`3`, colour="black", linetype="dashed", linewidth=0.1) +
# DOTTED: Jammu and Kashmir line of control
geom_sf(data=boundaries$`4`, colour="black", linetype="dotted", linewidth=0.1) +
# Plot the lakes
geom_sf(data=maps[["WBYA"]], fill="lightblue1", colour=NA, linewidth=0.1) +
# Change the axis
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
# Create the plotting
scale_fill_viridis_c("Sex ratio at birth", option="D", direction=-1) +
# Add the labs
#labs(caption=un_caption) +
# Create the background
theme(
panel.background = element_rect(fill='lightblue1'),
axis.text = element_blank(),
legend.position="bottom",
axis.ticks = element_blank()
) +
guides(fill = guide_legend(nrow=1, position="bottom"))
# Merge the map with
ggplot() +
# Plot the country bodies
geom_sf(data=maps[[1]], fill = "black", colour=NA) +
geom_sf(data=map_wpp_srb, aes(fill=srb), colour=NA) +
# Plot the country boundaries
# three styles of boundaries should be mapped: standard solid line, dashed line for undetermined boundaries, dotted for selected disputed boundaries
# to do that, we create a separate dataframe with each containing boundaries of the same type
# SOLID: 0 is coastlines; 1 is international boundaries;
geom_sf(data=boundaries$`0`, colour="black", linewidth=0.1) +
geom_sf(data=boundaries$`1`, colour="black", linewidth=0.1) +
# DASHED: Undetermined boundary lines (e.g. Sudan and South Sudan, State of Palestine)
geom_sf(data=boundaries$`3`, colour="black", linetype="dashed", linewidth=0.1) +
# DOTTED: Jammu and Kashmir line of control
geom_sf(data=boundaries$`4`, colour="black", linetype="dotted", linewidth=0.1) +
# Plot the lakes
geom_sf(data=maps[["WBYA"]], fill="lightblue1", colour=NA, linewidth=0.1) +
# Change the axis
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
# Create the plotting
scale_fill_viridis_c("Sex ratio at birth", option="B", direction=-1) +
# Add the labs
#labs(caption=un_caption) +
# Create the background
theme(
panel.background = element_rect(fill='lightblue1'),
axis.text = element_blank(),
legend.position="bottom",
axis.ticks = element_blank()
) +
guides(fill = guide_legend(nrow=1, position="bottom"))
# Water colour: "lightblue1" or "white"
water <- "white"
# Merge the map with
ggplot() +
# Plot the country bodies
geom_sf(data=maps[[1]], fill = "black", colour=NA) +
geom_sf(data=map_wpp_srb, aes(fill=srb), colour=NA) +
# Plot the country boundaries
# three styles of boundaries should be mapped: standard solid line, dashed line for undetermined boundaries, dotted for selected disputed boundaries
# to do that, we create a separate dataframe with each containing boundaries of the same type
# SOLID: 0 is coastlines; 1 is international boundaries;
geom_sf(data=boundaries$`0`, colour="black", linewidth=0.1) +
geom_sf(data=boundaries$`1`, colour="black", linewidth=0.1) +
# DASHED: Undetermined boundary lines (e.g. Sudan and South Sudan, State of Palestine)
geom_sf(data=boundaries$`3`, colour="black", linetype="dashed", linewidth=0.1) +
# DOTTED: Jammu and Kashmir line of control
geom_sf(data=boundaries$`4`, colour="black", linetype="dotted", linewidth=0.1) +
# Plot the lakes
geom_sf(data=maps[["WBYA"]], fill=water, colour=NA, linewidth=0.1) +
# Change the axis
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
# Create the plotting
scale_fill_viridis_c("Sex ratio at birth", option="B", direction=-1) +
# Add the labs
#labs(caption=un_caption) +
# Create the background
theme(
panel.background = element_rect(fill=water),
axis.text = element_blank(),
legend.position="bottom",
axis.ticks = element_blank()
) +
guides(fill = guide_legend(nrow=1, position="bottom"))
# Merge the map with
ggplot() +
# Plot the country bodies
geom_sf(data=maps[[1]], fill = "black", colour=NA) +
geom_sf(data=map_wpp_srb, aes(fill=srb), colour=NA) +
# Plot the country boundaries
# three styles of boundaries should be mapped: standard solid line, dashed line for undetermined boundaries, dotted for selected disputed boundaries
# to do that, we create a separate dataframe with each containing boundaries of the same type
# SOLID: 0 is coastlines; 1 is international boundaries;
geom_sf(data=boundaries$`0`, colour="black", linewidth=0.1) +
geom_sf(data=boundaries$`1`, colour="black", linewidth=0.1) +
# DASHED: Undetermined boundary lines (e.g. Sudan and South Sudan, State of Palestine)
geom_sf(data=boundaries$`3`, colour="black", linetype="dashed", linewidth=0.1) +
# DOTTED: Jammu and Kashmir line of control
geom_sf(data=boundaries$`4`, colour="black", linetype="dotted", linewidth=0.1) +
# Plot the lakes
geom_sf(data=maps[["WBYA"]], fill=water, colour=NA, linewidth=0.1) +
# Change the axis
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
# Create the plotting
scale_fill_viridis_c("Sex ratio at birth", option="B", direction=-1) +
# Add the labs
#labs(caption=un_caption) +
# Create the background
theme(
panel.background = element_rect(fill=water),
axis.text = element_blank(),
legend.position="bottom",
axis.ticks = element_blank()
)
# Merge the map with
ggplot() +
# Plot the country bodies
geom_sf(data=maps[[1]], fill = "black", colour=NA) +
geom_sf(data=map_wpp_srb, aes(fill=srb), colour=NA) +
# Plot the country boundaries
# three styles of boundaries should be mapped: standard solid line, dashed line for undetermined boundaries, dotted for selected disputed boundaries
# to do that, we create a separate dataframe with each containing boundaries of the same type
# SOLID: 0 is coastlines; 1 is international boundaries;
geom_sf(data=boundaries$`0`, colour="black", linewidth=0.1) +
geom_sf(data=boundaries$`1`, colour="black", linewidth=0.1) +
# DASHED: Undetermined boundary lines (e.g. Sudan and South Sudan, State of Palestine)
geom_sf(data=boundaries$`3`, colour="black", linetype="dashed", linewidth=0.1) +
# DOTTED: Jammu and Kashmir line of control
geom_sf(data=boundaries$`4`, colour="black", linetype="dotted", linewidth=0.1) +
# Plot the lakes
geom_sf(data=maps[["WBYA"]], fill=water, colour=NA, linewidth=0.1) +
# Change the axis
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
# Create the plotting
scale_fill_viridis_c("Sex ratio at birth", option="B", direction=-1) +
# Add the labs
#labs(caption=un_caption) +
# Create the background
theme(
panel.background = element_rect(fill=water),
axis.text = element_blank(),
legend.position="bottom",
axis.ticks = element_blank(),
legend.key.width=unit(2, "cm")
)
ggsave("results/srb_world_map_2023.svg")
# Load the data from the Wittgenstein centre
dt_edu_pop <- fread("raw/wcde_data_education.csv")
rm(list=ls())
source("U:/projects/37_global_birth_squeezes/code/06_education_structures.R", echo = TRUE)
library(ggplot2)
# Pivot wider
dcast(dt_edu_pop, formula = Area+Year+Age+Education~Sex, value.var = "Population")
library(data.table)
# Pivot wider
dt_edu_pop <- dcast(dt_edu_pop, formula = Area+Year+Age+Education~Sex, value.var = "Population")
# Estimate the sex ratio
dt_edu_pop[, sr:=Male/Female]
unique(dt_edu_pop$Area)
# Plot the trend in the sex ratio
ggplot(data=subset(dt_edu_pop, Area=="World"), aes(x=Year, y=sr, colour=age, group=age)) +
geom_line()
# Plot the trend in the sex ratio
ggplot(data=subset(dt_edu_pop, Area=="World"), aes(x=Year, y=sr, colour=Age, group=Age)) +
geom_line()
# Plot the trend in the sex ratio
ggplot(data=subset(dt_edu_pop, Area=="World"), aes(x=Year, y=sr, colour=Age, group=Age)) +
geom_line() +
facet_wrap(~Education)
# Plot the trend in the sex ratio
ggplot(data=subset(dt_edu_pop, Area=="World"), aes(x=Year, y=sr, colour=Education, group=Education)) +
geom_line() +
facet_wrap(~Age)
# Plot the trend in the sex ratio
ggplot(data=subset(dt_edu_pop, Area=="World"), aes(x=Year, y=sr, colour=Education, group=Education)) +
geom_line() +
facet_wrap(~Age) +
scale_y_continuous("Sex ratio", trans="log10")
# Plot the trend in the sex ratio
ggplot(data=subset(dt_edu_pop, Area=="World"), aes(x=Year, y=sr, colour=Education, group=Education)) +
geom_hline(yintercept=1) +
geom_line() +
facet_wrap(~Age) +
scale_y_continuous("Sex ratio", trans="log10")
# Plot the trend in the sex ratio
ggplot(data=subset(dt_edu_pop, Area=="World"), aes(x=Year, y=sr, colour=Education, group=Education)) +
geom_hline(yintercept=1) +
geom_line(linewidth=1.3) +
facet_wrap(~Age) +
scale_y_continuous("Sex ratio", trans="log10")
# Plot the trend in the sex ratio
ggplot(data=subset(dt_edu_pop, Area=="World"&!(Age%in%c("0-4", "10-14", "All"))), aes(x=Year, y=sr, colour=Education, group=Education)) +
geom_hline(yintercept=1) +
geom_line(linewidth=1.3) +
facet_wrap(~Age) +
scale_y_continuous("Sex ratio", trans="log10")
# Plot the trend in the sex ratio
ggplot(data=subset(dt_edu_pop, Area=="World"&!(Age%in%c("0--4", "10--14", "All"))), aes(x=Year, y=sr, colour=Education, group=Education)) +
geom_hline(yintercept=1) +
geom_line(linewidth=1.3) +
facet_wrap(~Age) +
scale_y_continuous("Sex ratio", trans="log10")
# Make the age variable a factor
dt_edu_pop[, Age:=factor(Age, ordered=T)]
# Plot the trend in the sex ratio
ggplot(data=subset(dt_edu_pop, Area=="World"&!(Age%in%c("0--4", "10--14", "All"))), aes(x=Year, y=sr, colour=Education, group=Education)) +
geom_hline(yintercept=1) +
geom_line(linewidth=1.3) +
facet_wrap(~Age) +
scale_y_continuous("Sex ratio", trans="log10")
# Plot the trend in the sex ratio
ggplot(data=subset(dt_edu_pop, Area=="World"&!(Age%in%c("0--4", "10--14", "All"))), aes(x=Year, y=sr, colour=Education, group=Education)) +
geom_hline(yintercept=1) +
geom_line(linewidth=1.3) +
facet_wrap(~Age) +
scale_y_continuous("Sex ratio", trans="log10") +
scale_x_continuous(expand=c(0, 0))
# Plot the trend in the sex ratio
ggplot(data=subset(dt_edu_pop, Area=="World"&!(Age%in%c("0--4", "10--14", "All"))), aes(x=Year, y=sr, colour=Education, group=Education)) +
geom_vline(xintercept=2025, linetype="dotted") +
geom_hline(yintercept=1) +
geom_line(linewidth=1.3) +
facet_wrap(~Age) +
scale_y_continuous("Sex ratio", trans="log10") +
scale_x_continuous(expand=c(0, 0))
source("code/graphics.R")
paste(seq(0, 20, by=5), seq(0, 20, by=5), sep="--")
paste(seq(0, 20, by=5), seq(5, 25, by=5), sep="--")
# Create and age group variable
dt_edu_pop[, age_group:=fcase(Age%in%paste(seq(0, 20, by=5), seq(4, 24, by=5), sep="--"), "Below 25",
Age%in%paste(seq(25, 60, by=5), seq(29, 64, by=5), sep="--"), "25-64",
Age%in%c(paste(seq(65, 95, by=5), seq(69, 99, by=5), sep="--"), "100+"), "Above")]
# Aggregate by age group
dt_edu_pop[, .(sr=sum(Male)/sum(Female)), by=.(Area, Year, age_group, Education)]
# Aggregate by age group
dt_edu_agg <- dt_edu_pop[, .(sr=sum(Male)/sum(Female)), by=.(Area, Year, age_group, Education)]
# Plot the trend for age groups
ggplot(data=subset(dt_edu_pop, Area=="World"), aes(x=Year, y=sr, colour=Education, group=Education)) +
geom_vline(xintercept=2025, linetype="dotted") +
geom_hline(yintercept=1) +
geom_line(linewidth=1.3) +
facet_wrap(~age_group) +
scale_y_continuous("Sex ratio", trans="log10") +
scale_x_continuous(expand=c(0, 0))
# Plot the trend for age groups
ggplot(data=subset(dt_edu_agg, Area=="World"), aes(x=Year, y=sr, colour=Education, group=Education)) +
geom_vline(xintercept=2025, linetype="dotted") +
geom_hline(yintercept=1) +
geom_line(linewidth=1.3) +
facet_wrap(~age_group) +
scale_y_continuous("Sex ratio", trans="log10") +
scale_x_continuous(expand=c(0, 0))
# Plot the trend for age groups
ggplot(data=subset(dt_edu_agg, Area=="World"), aes(x=Year, y=sr, colour=Education, group=Education)) +
geom_vline(xintercept=2025, linetype="dotted") +
geom_hline(yintercept=1) +
geom_line(linewidth=1.3) +
facet_wrap(~age_group) +
scale_y_continuous("Sex ratio", trans="log10", n.breaks=10) +
scale_x_continuous(expand=c(0, 0))
# Plot the trend for age groups
ggplot(data=subset(dt_edu_agg, Area=="World"&!is.na(age_group)), aes(x=Year, y=sr, colour=Education, group=Education)) +
geom_vline(xintercept=2025, linetype="dotted") +
geom_hline(yintercept=1) +
geom_line(linewidth=1.3) +
facet_wrap(~age_group) +
scale_y_continuous("Sex ratio", trans="log10", n.breaks=10) +
scale_x_continuous(expand=c(0, 0))
# Plot the trend for age groups
ggplot(data=subset(dt_edu_agg, Area=="World"&!is.na(age_group)&Education!="Total"), aes(x=Year, y=sr, colour=Education, group=Education)) +
geom_vline(xintercept=2025, linetype="dotted") +
geom_hline(yintercept=1) +
geom_line(linewidth=1.3) +
facet_wrap(~age_group) +
scale_y_continuous("Sex ratio", trans="log10", n.breaks=10) +
scale_x_continuous(expand=c(0, 0))
# Plot the trend for age groups
ggplot(data=subset(dt_edu_agg, Area=="World"&!is.na(age_group)&Education!="Total"), aes(x=Year, y=sr, colour=Education, group=Education)) +
geom_vline(xintercept=2025, linetype="dotted") +
geom_hline(yintercept=1) +
geom_line(linewidth=1.3) +
facet_wrap(~age_group) +
scale_y_continuous("Sex ratio", trans="log10", n.breaks=10) +
scale_x_continuous(expand=c(0, 0), breaks=seq(1950, 2100, by=10))
# Plot the trend for age groups
ggplot(data=subset(dt_edu_agg, Area=="World"&!is.na(age_group)&Education!="Total"), aes(x=Year, y=sr, colour=Education, group=Education)) +
geom_vline(xintercept=2025, linetype="dotted") +
geom_hline(yintercept=1) +
geom_line(linewidth=1.3) +
facet_wrap(~age_group) +
scale_y_continuous("Sex ratio", trans="log10", n.breaks=10) +
scale_x_continuous(expand=c(0, 0), breaks=seq(1950, 2100, by=10)) +
theme(
axis.text.x=element_text(angle=45, hjust=1, vjust=1)
)
ggsave(filename="results/sex_ratio_world_education.pdf")
ggsave(filename="results/sex_ratio_world_education.pdf", width=25, height=15, unit="cm")
# Plot the trend for age groups
ggplot(data=subset(dt_edu_agg, Area=="World"&!is.na(age_group)&Education!="Total"), aes(x=Year, y=sr, colour=Education, group=Education)) +
geom_vline(xintercept=2025, linetype="dotted") +
geom_hline(yintercept=1) +
geom_line(linewidth=1.3) +
facet_wrap(~age_group) +
scale_y_continuous("Sex ratio", trans="log10", n.breaks=10) +
scale_x_continuous(expand=c(0, 0), breaks=seq(1950, 2100, by=10)) +
scale_colour_viridis_d(option="D") +
theme(
axis.text.x=element_text(angle=45, hjust=1, vjust=1)
)
# Plot the trend for age groups
ggplot(data=subset(dt_edu_agg, Area=="World"&!is.na(age_group)&Education!="Total"), aes(x=Year, y=sr, colour=Education, group=Education)) +
geom_vline(xintercept=2025, linetype="dotted") +
geom_hline(yintercept=1) +
geom_line(linewidth=1.3) +
facet_wrap(~age_group) +
scale_y_continuous("Sex ratio", trans="log10", n.breaks=10) +
scale_x_continuous(expand=c(0, 0), breaks=seq(1950, 2100, by=10)) +
scale_colour_viridis_d(option="B") +
theme(
axis.text.x=element_text(angle=45, hjust=1, vjust=1)
)
# Plot the trend for age groups
ggplot(data=subset(dt_edu_agg, Area=="World"&!is.na(age_group)&Education!="Total"), aes(x=Year, y=sr, colour=Education, group=Education)) +
geom_vline(xintercept=2025, linetype="dotted") +
geom_hline(yintercept=1) +
geom_line(linewidth=1.3) +
facet_wrap(~age_group) +
scale_y_continuous("Sex ratio", trans="log10", n.breaks=10) +
scale_x_continuous(expand=c(0, 0), breaks=seq(1950, 2100, by=10)) +
scale_colour_viridis_d(option="A") +
theme(
axis.text.x=element_text(angle=45, hjust=1, vjust=1)
)
# Plot the trend for age groups
ggplot(data=subset(dt_edu_agg, Area=="World"&!is.na(age_group)&Education!="Total"), aes(x=Year, y=sr, colour=Education, group=Education)) +
geom_vline(xintercept=2025, linetype="dotted") +
geom_hline(yintercept=1) +
geom_line(linewidth=1.3) +
facet_wrap(~age_group) +
scale_y_continuous("Sex ratio", trans="log10", n.breaks=10) +
scale_x_continuous(expand=c(0, 0), breaks=seq(1950, 2100, by=10)) +
scale_colour_viridis_d(option="E") +
theme(
axis.text.x=element_text(angle=45, hjust=1, vjust=1)
)
